basePath: /
definitions:
  controllers.HTTPError:
    properties:
      error:
        type: string
    type: object
  models.Book:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      image_url:
        type: string
      price:
        type: string
      release_year:
        type: integer
      thickness:
        type: string
      title:
        type: string
      total_page:
        type: integer
      updated_at:
        type: string
    type: object
  models.BookInput:
    properties:
      description:
        type: string
      image_url:
        type: string
      price:
        type: string
      release_year:
        maximum: 2021
        minimum: 1980
        type: integer
      title:
        type: string
      total_page:
        type: integer
    required:
    - description
    - image_url
    - price
    - release_year
    - title
    - total_page
    type: object
  models.CreateDosenInput:
    properties:
      mata_kuliah_id:
        type: integer
      nama:
        type: string
    required:
    - mata_kuliah_id
    - nama
    type: object
  models.CreateJadwalKuliahInput:
    properties:
      dosen_id:
        type: integer
      hari:
        type: string
      jam_mulai:
        type: string
      jam_selesai:
        type: string
      mahasiswa_id:
        type: integer
    required:
    - dosen_id
    - hari
    - jam_mulai
    - jam_selesai
    - mahasiswa_id
    type: object
  models.CreateMahasiswaInput:
    properties:
      nama:
        type: string
    required:
    - nama
    type: object
  models.CreateMataKuliahInput:
    properties:
      nama:
        type: string
    required:
    - nama
    type: object
  models.CreateNilaiInput:
    properties:
      indeks:
        type: string
      mahasiswa_id:
        type: integer
      mata_kuliah_id:
        type: integer
      skor:
        type: integer
      users_id:
        type: integer
    required:
    - indeks
    - mahasiswa_id
    - mata_kuliah_id
    - skor
    - users_id
    type: object
  models.CreateUserInput:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - email
    - name
    - password
    type: object
  models.Dosen:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      mataKuliahID:
        type: integer
      nama:
        type: string
      updatedAt:
        type: string
    type: object
  models.JadwalKuliah:
    properties:
      createdAt:
        type: string
      dosen:
        $ref: '#/definitions/models.Dosen'
      dosenID:
        type: integer
      hari:
        type: string
      id:
        type: integer
      jamMulai:
        type: string
      jamSelesai:
        type: string
      mahasiswa:
        $ref: '#/definitions/models.Mahasiswa'
      mahasiswaID:
        type: integer
      updatedAt:
        type: string
    type: object
  models.LoginInput:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  models.Mahasiswa:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      nama:
        type: string
      updatedAt:
        type: string
    type: object
  models.MataKuliah:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      nama:
        type: string
      updatedAt:
        type: string
    type: object
  models.Nilai:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      indeks:
        type: string
      mahasiswaID:
        type: integer
      mataKuliahID:
        type: integer
      skor:
        type: integer
      updatedAt:
        type: string
      usersID:
        type: integer
    type: object
  models.UpdateDosenInput:
    properties:
      mata_kuliah_id:
        type: integer
      nama:
        type: string
    type: object
  models.UpdateJadwalKuliahInput:
    properties:
      dosen_id:
        type: integer
      hari:
        type: string
      jam_mulai:
        type: string
      jam_selesai:
        type: string
      mahasiswa_id:
        type: integer
    type: object
  models.UpdateMahasiswaInput:
    properties:
      nama:
        type: string
    type: object
  models.UpdateMataKuliahInput:
    properties:
      nama:
        type: string
    type: object
  models.UpdateNilaiInput:
    properties:
      indeks:
        type: string
      mahasiswa_id:
        type: integer
      mata_kuliah_id:
        type: integer
      skor:
        type: integer
      users_id:
        type: integer
    type: object
  models.UpdateUserInput:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  models.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
info:
  contact: {}
paths:
  /books:
    get:
      description: Get all books
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Book'
            type: array
      summary: Get All Books
      tags:
      - books
    post:
      consumes:
      - application/json
      description: Create a new book
      parameters:
      - description: Book details
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/models.BookInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Book'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.HTTPError'
      summary: Create Book
      tags:
      - books
  /books/{id}:
    delete:
      description: Delete a book by its ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.HTTPError'
      summary: Delete Book
      tags:
      - books
    get:
      description: Get a book by its ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Book'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.HTTPError'
      summary: Get Book by ID
      tags:
      - books
    patch:
      consumes:
      - application/json
      description: Update an existing book
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      - description: Book details
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/models.BookInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Book'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.HTTPError'
      summary: Update Book
      tags:
      - books
  /dosen:
    get:
      consumes:
      - application/json
      description: Get All Dosen
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Dosen'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      summary: Get All Dosen
      tags:
      - dosen
    post:
      consumes:
      - application/json
      description: Create a new Dosen with the input payload
      parameters:
      - description: Create Dosen
        in: body
        name: dosen
        required: true
        schema:
          $ref: '#/definitions/models.CreateDosenInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Dosen'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Create a new Dosen
      tags:
      - dosen
  /dosen/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a Dosen by its ID
      parameters:
      - description: Dosen ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Delete a Dosen
      tags:
      - dosen
    get:
      consumes:
      - application/json
      description: Get a Dosen by its ID
      parameters:
      - description: Dosen ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Dosen'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Get a Dosen by ID
      tags:
      - dosen
    patch:
      consumes:
      - application/json
      description: Update a Dosen with the input payload
      parameters:
      - description: Dosen ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update Dosen
        in: body
        name: dosen
        required: true
        schema:
          $ref: '#/definitions/models.UpdateDosenInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Dosen'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Update a Dosen
      tags:
      - dosen
  /jadwal-kuliah:
    get:
      consumes:
      - application/json
      description: Get All Jadwal Kuliah
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.JadwalKuliah'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      summary: Get All Jadwal Kuliah
      tags:
      - jadwal-kuliah
    post:
      consumes:
      - application/json
      description: Create a new Jadwal Kuliah with the input payload
      parameters:
      - description: Create Jadwal Kuliah
        in: body
        name: jadwal-kuliah
        required: true
        schema:
          $ref: '#/definitions/models.CreateJadwalKuliahInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.JadwalKuliah'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Create a new Jadwal Kuliah
      tags:
      - jadwal-kuliah
  /jadwal-kuliah/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a Jadwal Kuliah by its ID
      parameters:
      - description: Jadwal Kuliah ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Delete a Jadwal Kuliah
      tags:
      - jadwal-kuliah
    get:
      consumes:
      - application/json
      description: Get a Jadwal Kuliah by its ID
      parameters:
      - description: Jadwal Kuliah ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.JadwalKuliah'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Get a Jadwal Kuliah by ID
      tags:
      - jadwal-kuliah
    patch:
      consumes:
      - application/json
      description: Update a Jadwal Kuliah with the input payload
      parameters:
      - description: Jadwal Kuliah ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update Jadwal Kuliah
        in: body
        name: jadwal-kuliah
        required: true
        schema:
          $ref: '#/definitions/models.UpdateJadwalKuliahInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.JadwalKuliah'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Update a Jadwal Kuliah
      tags:
      - jadwal-kuliah
  /login:
    post:
      consumes:
      - application/json
      description: Login a User with the input payload
      parameters:
      - description: Login User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: token
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Login a User
      tags:
      - user
  /mahasiswa:
    get:
      consumes:
      - application/json
      description: Get All Mahasiswa
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Mahasiswa'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      summary: Get All Mahasiswa
      tags:
      - mahasiswa
    post:
      consumes:
      - application/json
      description: Create a new Mahasiswa with the input payload
      parameters:
      - description: Create Mahasiswa
        in: body
        name: mahasiswa
        required: true
        schema:
          $ref: '#/definitions/models.CreateMahasiswaInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Mahasiswa'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Create a new Mahasiswa
      tags:
      - mahasiswa
  /mahasiswa/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a Mahasiswa by its ID
      parameters:
      - description: Mahasiswa ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Delete a Mahasiswa
      tags:
      - mahasiswa
    get:
      consumes:
      - application/json
      description: Get a Mahasiswa by its ID
      parameters:
      - description: Mahasiswa ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Mahasiswa'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Get a Mahasiswa by ID
      tags:
      - mahasiswa
    patch:
      consumes:
      - application/json
      description: Update a Mahasiswa with the input payload
      parameters:
      - description: Mahasiswa ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update Mahasiswa
        in: body
        name: mahasiswa
        required: true
        schema:
          $ref: '#/definitions/models.UpdateMahasiswaInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Mahasiswa'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Update a Mahasiswa
      tags:
      - mahasiswa
  /mata-kuliah:
    get:
      consumes:
      - application/json
      description: Get All Mata Kuliah
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.MataKuliah'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      summary: Get All Mata Kuliah
      tags:
      - mata-kuliah
    post:
      consumes:
      - application/json
      description: Create a new Mata Kuliah with the input payload
      parameters:
      - description: Create Mata Kuliah
        in: body
        name: mata_kuliah
        required: true
        schema:
          $ref: '#/definitions/models.CreateMataKuliahInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.MataKuliah'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Create a new Mata Kuliah
      tags:
      - mata-kuliah
  /mata-kuliah/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a Mata Kuliah by its ID
      parameters:
      - description: Mata Kuliah ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Delete a Mata Kuliah
      tags:
      - mata-kuliah
    get:
      consumes:
      - application/json
      description: Get a Mata Kuliah by its ID
      parameters:
      - description: Mata Kuliah ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.MataKuliah'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Get a Mata Kuliah by ID
      tags:
      - mata-kuliah
    patch:
      consumes:
      - application/json
      description: Update a Mata Kuliah with the input payload
      parameters:
      - description: Mata Kuliah ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update Mata Kuliah
        in: body
        name: mata_kuliah
        required: true
        schema:
          $ref: '#/definitions/models.UpdateMataKuliahInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.MataKuliah'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Update a Mata Kuliah
      tags:
      - mata-kuliah
  /nilai:
    get:
      consumes:
      - application/json
      description: Get All Nilai
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Nilai'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      summary: Get All Nilai
      tags:
      - nilai
    post:
      consumes:
      - application/json
      description: Create a new Nilai with the input payload
      parameters:
      - description: Create Nilai
        in: body
        name: nilai
        required: true
        schema:
          $ref: '#/definitions/models.CreateNilaiInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Nilai'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Create a new Nilai
      tags:
      - nilai
  /nilai/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a Nilai by its ID
      parameters:
      - description: Nilai ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Delete a Nilai
      tags:
      - nilai
    get:
      consumes:
      - application/json
      description: Get a Nilai by its ID
      parameters:
      - description: Nilai ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Nilai'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Get a Nilai by ID
      tags:
      - nilai
    patch:
      consumes:
      - application/json
      description: Update a Nilai with the input payload
      parameters:
      - description: Nilai ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update Nilai
        in: body
        name: nilai
        required: true
        schema:
          $ref: '#/definitions/models.UpdateNilaiInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Nilai'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Update a Nilai
      tags:
      - nilai
  /register:
    post:
      consumes:
      - application/json
      description: Register a new User with the input payload
      parameters:
      - description: Register User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.CreateUserInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Register a new User
      tags:
      - user
  /user:
    post:
      consumes:
      - application/json
      description: Create a new User with the input payload
      parameters:
      - description: Create User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.CreateUserInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Create a new User
      tags:
      - user
  /user/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a User by its ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Delete a User
      tags:
      - user
    get:
      consumes:
      - application/json
      description: Get a User by its ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Get a User by ID
      tags:
      - user
    patch:
      consumes:
      - application/json
      description: Update a User with the input payload
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UpdateUserInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Update a User
      tags:
      - user
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
