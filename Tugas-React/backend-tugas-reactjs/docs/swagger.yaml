definitions:
  controllers.HTTPError:
    properties:
      error:
        type: string
    type: object
  models.Book:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      image_url:
        type: string
      price:
        type: string
      release_year:
        type: integer
      thickness:
        type: string
      title:
        type: string
      total_page:
        type: integer
      updated_at:
        type: string
    type: object
  models.BookInput:
    properties:
      description:
        type: string
      image_url:
        type: string
      price:
        type: string
      release_year:
        maximum: 2021
        minimum: 1980
        type: integer
      title:
        type: string
      total_page:
        type: integer
    required:
    - description
    - image_url
    - price
    - release_year
    - title
    - total_page
    type: object
info:
  contact: {}
paths:
  /books:
    get:
      description: Get all books
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Book'
            type: array
      summary: Get All Books
      tags:
      - books
    post:
      consumes:
      - application/json
      description: Create a new book
      parameters:
      - description: Book details
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/models.BookInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Book'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.HTTPError'
      summary: Create Book
      tags:
      - books
  /books/{id}:
    delete:
      description: Delete a book by its ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.HTTPError'
      summary: Delete Book
      tags:
      - books
    get:
      description: Get a book by its ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Book'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.HTTPError'
      summary: Get Book by ID
      tags:
      - books
    patch:
      consumes:
      - application/json
      description: Update an existing book
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      - description: Book details
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/models.BookInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Book'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.HTTPError'
      summary: Update Book
      tags:
      - books
swagger: "2.0"
